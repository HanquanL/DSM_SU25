# Generated by Django 4.2.5 on 2025-08-12 16:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_alter_clinical_note_patient_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='NLP_model_registry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Model_name', models.CharField(default='diabetes_risk', max_length=50)),
                ('Model_version', models.CharField(default='v1.0', max_length=20)),
                ('auc', models.FloatField(blank=True, null=True)),
                ('pr_auc', models.FloatField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('Model_name', 'Model_version')},
            },
        ),
        migrations.CreateModel(
            name='ModelRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Model_name', models.CharField(default='diabetes_risk', max_length=50)),
                ('Model_version', models.CharField(default='v1.0', max_length=20)),
                ('auc', models.FloatField(blank=True, null=True)),
                ('pr_auc', models.FloatField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('Model_name', 'Model_version')},
            },
        ),
        migrations.CreateModel(
            name='Risk_Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Score', models.FloatField()),
                ('Model_name', models.CharField(default='diabetes_risk', max_length=50)),
                ('Model_version', models.CharField(default='v1.0', max_length=20)),
                ('Patient_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
            ],
            options={
                'indexes': [models.Index(fields=['Patient_id'], name='core_risk_s_Patient_18014f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Risk_FeatureSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Age', models.IntegerField()),
                ('BMI', models.FloatField()),
                ('Systolic_BP', models.FloatField()),
                ('Diastolic_BP', models.FloatField()),
                ('Total_Cholesterol', models.FloatField()),
                ('HDL_Cholesterol', models.FloatField()),
                ('LDL_Cholesterol', models.FloatField()),
                ('Triglycerides', models.FloatField()),
                ('Smoking_status', models.BooleanField()),
                ('Physical_activity', models.CharField(max_length=50)),
                ('Patient_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
            ],
            options={
                'indexes': [models.Index(fields=['Patient_id'], name='core_risk_f_Patient_02b089_idx')],
            },
        ),
        migrations.CreateModel(
            name='Note_prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Model_name', models.CharField(default='diabetes_risk', max_length=50)),
                ('Model_version', models.CharField(default='v1.0', max_length=20)),
                ('Prediction_specialty', models.CharField(blank=True, max_length=100, null=True)),
                ('Confidence', models.FloatField(blank=True, null=True)),
                ('Note_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.clinical_note')),
            ],
            options={
                'unique_together': {('Note_id', 'Model_name', 'Model_version')},
            },
        ),
    ]
